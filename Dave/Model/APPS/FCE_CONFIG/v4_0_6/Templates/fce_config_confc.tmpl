package Model.APPS.FCE_CONFIG.v4_0_6.Templates;

import Model.APPS.FCE_CONFIG.v4_0_6.FCE_CONFIG

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 * Copyright (c) 2015-2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2016-01-13:
 *     - Initial version.
 *
 * 2016-07-08:
 *     - Fixed incorrect case for an included header.<br>
 *
 * @endcond
 *
 */

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
#include <stdlib.h>
#include "fce_config.h"

/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/
#define CRC_MISMATCH_INTR_POS (0U)
#define CRC_CFG_ERR_INTR_POS  (1U)
#define CRC_LENGTH_ERR_INTR_POS (2U)
#define CRC_BUS_ERR_INTR_POS  (3U)
""");
String appInst = null;

for (Object appIns : appInstancesList )
{

appInst = appIns.getInstanceLabel()
List mappedUri = appIns.hwres_fce_slice.getSolverUri()
String fce_kernel_number = mappedUri[6]

out.print("""

/**********************************************************************************************************************
* DATA STRUCTURES
**********************************************************************************************************************/
/**
 * @ingroup FCE_CONFIG_datastructures
 * @{
 */


/**
 *  This structure contains configuration definition according to user input
 */
FCE_CONFIG_t ${appInst}=
{
 .fce_Kernel_ptr = (XMC_FCE_Kernel_t*)FCE_KE${fce_kernel_number},
 .fce_config.config_refin = ${if(appIns.gcheck_input_bytewise.value == true) '1'
                                                        else '0'}U,
 .fce_config.config_refout = ${if(appIns.gcheck_reflect_ouput_bitwise.value == true) '1'
                                                        else '0'}U,
 .fce_config.config_xsel   = ${if(appIns.gcheck_ouput_xor.value == true) '1'
                                                        else '0'}U,
 .event_mask = (${if(appIns.gcheck_crc_mismatch_interrupt.value == true) '1'
                                                        else '0'}U << CRC_MISMATCH_INTR_POS) | 
                (${if(appIns.gcheck_configuration_error_interrupt.value == true) '1'
                                                        else '0'}U << CRC_CFG_ERR_INTR_POS) |
                (${if(appIns.gcheck_length_error_interrupt.value == true) '1'
                                                        else '0'}U << CRC_LENGTH_ERR_INTR_POS) |
                (${if(appIns.gcheck_bus_error_interrupt.value == true) '1'
                                                        else '0'}U << CRC_BUS_ERR_INTR_POS)
}; 

/**
 * @}
 */
""");

}

